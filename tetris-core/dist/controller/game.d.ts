import { View } from '../view/view.interface';
import { Controller } from '../interface/controller.interface';
import { MultiplayerConnection } from '../interface/multiplayer-connection.interface';
import { SoundPlayer } from '../sound/sound-manager.interface';
export declare class Game {
    view: View;
    soundPlayer: SoundPlayer;
    controller: Controller;
    private multiplayer;
    private gameId;
    private scoring;
    private levels;
    private level;
    private currentLevelIndex;
    private completedLinesCurrentLevel;
    private piece;
    private nextPiece;
    private board;
    private fallingPieceInterval;
    init(): void;
    newGame(): void;
    changeMultiplayerConnection(singleOrMultiplayerConnection: MultiplayerConnection): void;
    singlePlayerOptionSelected(): void;
    multiplayerOptionSelected(): void;
    createMultiplayerGame(): void;
    joinGame(): void;
    joinGameWithId(gameId: number): void;
    showMultiplayerGameId(): void;
    mute(): void;
    unMute(): void;
    private start;
    private initializeLevels;
    private attachToController;
    private attachToMultiplayer;
    private player2Connected;
    private updatePlayer2Piece;
    private updatePlayer2Board;
    private moveLeft;
    private moveRight;
    private moveDown;
    private rotate;
    private freezePiece;
    private freezePieceOnDashboard;
    private calculateScoringForNewFreezedPiece;
    private showScore;
    private levelCompleted;
    private removeLinesIfAny;
    private cleanALine;
    private putNextPieceIntoBoard;
    private gameOver;
    private moveNextShape;
    private drawNextShape;
    private movePieceToNewPositionIfNoCollision;
    private startNewLevel;
    private initLevelVariables;
    private startLevelGame;
    private resumeControl;
    private playLevelMusic;
    private showTotalLines;
    private showNewLevelStart;
    private startFallingPiece;
    private pauseFallingPiece;
    private drawPiece;
    private drawBoard;
    private centerPiece;
}
